name: SharedNotes CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: docker.io

jobs:
  # ============================================================================
  # BUILD AND PUSH DOCKER IMAGES
  # ============================================================================
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    strategy:
      matrix:
        service: [notes-service, api-gateway, frontend]
        
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.DOCKERHUB_USERNAME }}/sharednotes-${{ matrix.service }}
        tags: |
          type=ref,event=branch
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ${{ matrix.service == 'frontend' && 'frontend' || format('backend/{0}', matrix.service) }}
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  # ============================================================================
  # DEPLOYMENT PLACEHOLDER
  # ============================================================================
  deploy:
    name: Deploy Application
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Deploy to production
      run: |
        echo "ðŸš€ Deploying SharedNotes to production..."
        # Add your deployment commands here
        # Example: kubectl apply -f k8s/ or docker-compose up -d with updated images
        echo "Deployment placeholder - implement your deployment strategy"
